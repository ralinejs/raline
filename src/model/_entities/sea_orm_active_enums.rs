//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(
    Debug,
    Clone,
    PartialEq,
    Eq,
    EnumIter,
    DeriveActiveEnum,
    Serialize,
    Deserialize,
    strum :: EnumString,
)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "comment_status")]
pub enum CommentStatus {
    #[sea_orm(string_value = "approved")]
    Approved,
    #[sea_orm(string_value = "deleted")]
    Deleted,
    #[sea_orm(string_value = "spam")]
    Spam,
    #[sea_orm(string_value = "waiting")]
    Waiting,
}
#[derive(
    Debug,
    Clone,
    PartialEq,
    Eq,
    EnumIter,
    DeriveActiveEnum,
    Serialize,
    Deserialize,
    strum :: EnumString,
)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "user_gender")]
pub enum UserGender {
    #[sea_orm(string_value = "female")]
    Female,
    #[sea_orm(string_value = "male")]
    Male,
    #[sea_orm(string_value = "unknown")]
    Unknown,
}
#[derive(
    Debug,
    Clone,
    PartialEq,
    Eq,
    EnumIter,
    DeriveActiveEnum,
    Serialize,
    Deserialize,
    strum :: EnumString,
)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "user_type")]
pub enum UserType {
    #[sea_orm(string_value = "admin")]
    Admin,
    #[sea_orm(string_value = "normal")]
    Normal,
}
